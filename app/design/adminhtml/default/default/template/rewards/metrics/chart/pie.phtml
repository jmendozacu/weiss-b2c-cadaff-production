<?php if ($this->getDisplayChart()) : ?>

<div id="chart" class='with-3d-shadow with-transitions'>
    <svg id="piechart" style="width: 840px; height: 650px; border: 2px;"></svg>
</div>

<script language="javascript" type="text/javascript">
  // Prototype.js overwrites native Array.prototype.reduce.
  // This is a polyfill to make sure we can use reduce() in nvd3.js.
  // For more check: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce
  Array.prototype.reduce = function( callback  ) {
    'use strict';
    if ( null === this || 'undefined' === typeof this ) {
      throw new TypeError(
         'Array.prototype.reduce called on null or undefined' );
    }
    if ( 'function' !== typeof callback ) {
      throw new TypeError( callback + ' is not a function' );
    }
    var t = Object( this ), len = t.length >>> 0, k = 0, value;
    if ( arguments.length >= 2 ) {
      value = arguments[1];
    } else {
      while ( k < len && ! k in t ) k++;
      if ( k >= len )
        throw new TypeError('Reduce of empty array with no initial value');
      value = t[ k++ ];
    }
    for ( ; k < len ; k++ ) {
      if ( k in t ) {
         value = callback( value, t[k], k, t );
      }
    }
    return value;
  };


  nv.addGraph(function() {
    var width  = 830,
      height = 650,
      data   = <?php echo $this->getChartData(); ?>;

    var chart = nv.models.pieChart()
      .x(function(d) { return d.distribution_reason })
      .y(function(d) { return d.total_points })
      .color(d3.scale.category10().range())
      .width(width)
      .height(height);

    // overwrite tooltip to include percentage of points from total amount distributed
    chart.tooltipContent(function(key, y, e, graph) {
      return '<h3>' + key + '</h3>' +
      '<p>' +  y + ' ( ' + e.point.points_percentage + '% ) ' + '</p>';
    });

    d3.select("#piechart")
      .datum(data)
      .transition().duration(1200)
      .attr('width', width)
      .attr('height', height)
      .call(chart);

    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

    return chart;
  });
</script>

<?php endif ?>
