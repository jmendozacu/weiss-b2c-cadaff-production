<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    MessageBusiness
 * @package     MessageBusiness_ContactsSync
 * @author 		Sinabs - http://www.sinabs.fr
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script type="text/javascript">
var interfaceLevel = '<?php echo str_replace("/", "_", MessageBusiness_ContactsSync_Helper_Data::XML_PATH_SYNC_ACCEPT_INTERFACE_LEVEL); ?>';
var interfaceOption = '<?php echo str_replace("/", "_", MessageBusiness_ContactsSync_Helper_Data::XML_PATH_SYNC_ACCEPT_INTERFACE_OPTION); ?>';
var typeExtract = '<?php echo str_replace("/", "_", MessageBusiness_ContactsSync_Helper_Data::XML_PATH_SYNC_FULL_EXTRACT); ?>';

function runSync() {
	var acceptInterfaceLevel = document.getElementById(interfaceLevel).value;
	var acceptInterfaceOption = document.getElementById(interfaceOption).value;
	var fullExtract = document.getElementById(typeExtract).value;
	
	new Ajax.Request('<?php echo $this->getAjaxSyncUrl(); ?>', { 
		loaderArea: true,
		method: 'POST',
		parameters: {
			acceptInterfaceLevel: acceptInterfaceLevel,
			acceptInterfaceOption: acceptInterfaceOption,
			fullExtract: fullExtract
		},
		onSuccess: function(transport) {
			response = transport.responseText.evalJSON();
			self.location=self.location;
		}
	});
}

function stopSync() {
	var acceptInterfaceLevel = document.getElementById(interfaceLevel).value;
	var acceptInterfaceOption = document.getElementById(interfaceOption).value;
	var fullExtract = document.getElementById(typeExtract).value;
	
	new Ajax.Request('<?php echo $this->getAjaxStopSyncUrl(); ?>', { 
		loaderArea: true,
		method: 'POST',
		parameters: {
			acceptInterfaceLevel: acceptInterfaceLevel,
			acceptInterfaceOption: acceptInterfaceOption,
			fullExtract: fullExtract
		},
		onSuccess: function(transport) {
			response = transport.responseText.evalJSON();
			self.location=self.location;
		}
	});
}
</script>
<?php echo $this->getButtonHtml(); ?>